@import "src/styles/utils.scss";

@include adjustPaddingInIBMGridAndCol();

.bx--btn--primary {
  padding-right: 15px;
  background-color: $principal-color;
}

.bx--btn--primary:hover {
  background-color: $principal-color-hover;
}

.bx--btn--primary:disabled {
  background-color: #c6c6c6;
}

.parcial-container {
  position: relative;
  padding-bottom: 45%;
  padding-top: 35px;
  height: 0;
  overflow: hidden;
}

.parcial-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.no-parciales-tile {
  display: flex;
  height: 100vh;
  justify-content: center;
  align-items: center;
  text-align: center;
  p {
    font-size: calc(2vw + 2vh);
  }
}

.zip-button-elements-container {
  display: flex;
  align-items: center;
  justify-content: center;

  img {
    margin-right: 0.5rem;
  }

  span {
    color: white;
  }
}

:host ::ng-deep {
  .bx--skeleton__placeholder {
    width: 100%;
  }

  .parcial-container .bx--skeleton__placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

$count: 10;
$time: 2; //in seconds
$size: 24;
$color: white;

.holder {
  position: relative;
  left: 0px;
  top: 0px;
  bottom: 0px;
  right: 0px;
  margin-left: 0.5rem;
  background-color: transparent;
}

.preloader {
  /* size */
  width: $size + px;
  height: $size + px;
  position: relative;
  left: 50%;
  top: 0.5rem;
  transform: translateX(-50%) translateY(-50%);
  animation: rotatePreloader $time + s infinite ease-in;
}
@keyframes rotatePreloader {
  0% {
    transform: translateX(-50%) translateY(-50%) rotateZ(0deg);
  }
  100% {
    transform: translateX(-50%) translateY(-50%) rotateZ(-360deg);
  }
}
.preloader div {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}
.preloader div:before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0%;
  width: 10%;
  height: 10%;
  background-color: $color;
  transform: translateX(-50%);
  border-radius: 50%;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  -ms-border-radius: 50%;
  -o-border-radius: 50%;
}

@for $i from 1 through $count {
  .preloader div:nth-child(#{$i}) {
    transform: rotateZ(((360 / $count) * ($i - 1)) + deg);
    animation: rotateCircle + $i $time + s infinite linear;
    z-index: $count - $i;
  }
  @keyframes rotateCircle#{$i} {
    #{percentage(((50 / $count) * ($i - 1)) / 100)} {
      opacity: 0;
    }
    #{percentage((((50 / $count) + 0.0001) * ($i - 1)) / 100)} {
      opacity: 1;
      transform: rotateZ((0 - ((360 / $count) * ($i - 2))) + deg);
    }
    #{percentage((((50 / $count) * ($i - 0)) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    #{percentage(((50 + ((50 / $count) * ($i - 0))) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    100% {
      transform: rotateZ((0 - ((360 / $count) * ($count - 1))) + deg);
      opacity: 1;
    }
  }
}
